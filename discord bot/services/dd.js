const fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));


    async function cookieGen(domain) {
        const response = await fetch('https://api-js.datadome.co/js/', {
            'method': 'POST',
            'mode': 'cors',
            'headers': {
                'x-forwarded-for': `${Math.floor(Math.random() * 90 + 10)}.${Math.floor(Math.random() * 90 + 10)}.${Math.floor(Math.random() * 90 + 10)}`,
                'Content-type': 'application/x-www-form-urlencoded',
                'Host': 'api-js.datadome.co',
                'Origin': domain,
                'Referer': domain,
                'Sec-Fetch-Dest': 'empty',
                'Sec-Fetch-Mode': 'cors',
                'Sec-Fetch-Site': 'cross-site',
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36'
            },
            'body': new URLSearchParams({
                'ddv': '4.1.26',
                'eventCounters': [],
                'jsType': 'ch',
                'ddk': 'A55FBF4311ED6F1BF9911EB71931D5',
                'events': [],
                'request': '%2F',
                'responsePage': 'origin',
                'cid': 'null',
                'dddomain': domain,
                'Referer': '',
                'jsData': JSON.stringify({
                    'ts_tec': false,
                    'tz': 300,
                    'rri': true,
                    'eva': 33,
                    'nm': false,
                    'dat': false,
                    'ancs': true,
                    'lo': false,
                    'vcots': false,
                    'br_oh': 1040,
                    'bfr': false,
                    'ts_tsa': false,
                    'acaa': 'probably',
                    'ts_mtp': 0,
                    'rgp': true,
                    'idfr': true,
                    'mmt': 'application/pdf,application/x-google-chrome-pdf,application/x-nacl,application/x-pnacl',
                    'so': 'landscape-primary',
                    'vnd': 'Google Inc.',
                    'ifov': false,
                    'plg': 3,
                    'svde': false,
                    'jsf': false,
                    'hdn': false,
                    'lb': false,
                    'str_ss': true,
                    'vcw': 'probably',
                    'br_w': 1052,
                    'aflt': true,
                    'vc3': 'maybe',
                    'vcqts': false,
                    'lg': 'en-US',
                    'plgod': false,
                    'cvs': true,
                    'tagpu': `${Math.floor(Math.random() * 90 + 10)}.${Math.floor(Math.random() * (9999999999999 - 1000000000000 + 1)) + 1000000000000}`,
                    'aco': 'probably',
                    'acmp4ts': false,
                    'acf': 'probably',
                    'prm': true,
                    'geb': false,
                    'pr': 1,
                    'acmp3ts': false,
                    'ars_h': 1040,
                    'xr': true,
                    'lgs': true,
                    'bint': true,
                    'vc1': 'probably',
                    'tzp': 'America/New_York',
                    'vco': 'probably',
                    'awe': false,
                    'vch': 'probably',
                    'vc1ts': false,
                    'rs_w': 1920,
                    'wdifrm': false,
                    'glvd': 'Google Inc.',
                    'acaats': true,
                    'ocpt': false,
                    'acwm': 'maybe',
                    'br_ow': 1920,
                    'wdif': false,
                    'acfts': false,
                    'ars_w': 1920,
                    'cgca': true,
                    'acmp3': 'probably',
                    'nddc': 0,
                    'vcq': '',
                    'bcda': true,
                    'wbd': false,
                    'ac3': '',
                    'str_odb': true,
                    'acma': 'maybe',
                    'phe': false,
                    'str_ls': true,
                    'idn': true,
                    'inlf': true,
                    'inlc': true,
                    'wdifts': false,
                    'rs_cd': 24,
                    'vcmpts': false,
                    'sqt': false,
                    'lgsod': false,
                    'ac3ts': false,
                    'dvm': 8,
                    'hc': 8,
                    'acmp': 'probably',
                    'acw': 'probably',
                    'acmpts': true,
                    'pltod': false,
                    'plu': 'Chrome PDF Plugin,Chrome PDF Viewer,Native Client',
                    'vcmp': '',
                    'emt': false,
                    'ua': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36',
                    'vcwts': true,
                    'vchts': true,
                    'rs_h': 1080,
                    'usb': 'defined',
                    'vc3ts': false,
                    'acmats': false,
                    'ecpc': false,
                    'str_idb': true,
                    'glrd': 'ANGLE (NVIDIA GeForce GTX 960 Direct3D11 vs_5_0 ps_5_0)',
                    'br_h': 969,
                    'acwts': false,
                    'bgav': true,
                    'acwmts': false,
                    'med': 'defined',
                    'tecd': true,
                    'ttst': `${Math.floor(Math.random() * 90 + 10)}.${Math.floor(Math.random() * (9999999999999 - 1000000000000 + 1)) + 1000000000000}`,
                    'bid': 'NA',
                    'wbdm': false,
                    'cokys': 'bG9hZFRpbWVzY3NpYXBwcnVudGltZQ==L=',
                    'vpbq': true,
                    'dbov': false,
                    'capi': false,
                    'wdw': true,
                    'acmp4': 'maybe',
                    'acots': false,
                    'spwn': false,
                    'sbct': true,
                }),
            }).toString(),
        });


        const resdata = await response.text();
        let cookie = resdata.toString().substring(24, resdata.length - 2);
        console.log(cookie);

        return {
            'cookie': cookie.split(';')[0],
        }
    }
    module.exports = {cookieGen}